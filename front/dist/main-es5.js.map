{"version":3,"sources":["webpack:///src/app/services/labels.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/pipes/translate.pipe.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["LabelsService","labels","key","providedIn","environment","production","TranslatePipe","labelsService","value","translate","name","AppComponent","titleService","setTitle","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {Subject} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LabelsService {\r\n\r\n  private labels : any = {\r\n    'page_title': \"Paperless games\"\r\n  }\r\n\r\n  public translate(key: string) : string {\r\n    return this.labels[key]\r\n  }\r\n\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {LabelsService} from \"../services/labels.service\";\n\n@Pipe({\n    name: 'translate'\n})\nexport class TranslatePipe implements PipeTransform {\n\n    constructor(private labelsService: LabelsService) {\n    }\n\n    transform(value: string, ...args: unknown[]): string {\n        return this.labelsService.translate(value)\n    }\n\n}\n","import { Component } from '@angular/core';\nimport {Title} from \"@angular/platform-browser\";\nimport {LabelsService} from \"./services/labels.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private titleService: Title, private labelsService: LabelsService) {\n    titleService.setTitle(labelsService.translate(\"page_title\"))\n  }\n}\n","<nav class=\"navbar navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">\n    {{ 'page_title' | translate }}\n  </a>\n</nav>\n<div>\n  TODO\n</div>\n\n","import {BrowserModule, Title} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {FormsModule} from '@angular/forms';\nimport {TranslatePipe} from './pipes/translate.pipe';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        TranslatePipe\n    ],\n    imports: [\n        FormsModule,\n        BrowserModule,\n        NgbModule\n    ],\n    providers: [Title],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}