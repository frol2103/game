swagger: "2.0"
info:
  description: "online game platform"
  version: "1.0.0"
  title: "Game"
  contact:
    email: "game@frol.be"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "game.frol.be"
basePath: "/api"
tags:
- name: "auth"
  description: "authentification"
- name: "game"
  description: "anything about games in general"
- name: "lostInTranslation"
  description: "Operations about lostInTranslation game"
schemes:
- "https"
- "http"
paths:
  /logout:
    get:
      tags:
        - "auth"
      summary: "logout"
      description: ""
      operationId: "logout"
      responses:
        "200":
          description: "ok"
  /login:
    post:
      tags:
      - "auth"
      summary: "login"
      description: ""
      operationId: "login"
      consumes:
        - "application/json"
      parameters:
      - in: "body"
        name: "username"
        description: "login information"
        required: true
        schema:
          type: "string"
      responses: 
        "200":
          description: "ok"

  /socialLogin:
    post:
      tags:
        - "auth"
      summary: "social login"
      description: ""
      operationId: "socialLogin"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "userAssociation"
          description: "the association infos"
          required: true
          schema:
            $ref : "#/definitions/UserAssociation"
      responses:
        "200":
          description: "ok"

  /user:
    get:
      tags:
        - "auth"
      summary: "connected user"
      description: ""
      operationId: "getConnectedUser"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/User"

  /user/link:
    post:
      tags:
        - "auth"
      summary: "link to external account"
      description: ""
      operationId: "linkToExternalAccount"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "userAssociation"
          description: "the association infos"
          required: true
          schema:
            $ref : "#/definitions/UserAssociation"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/User"

  /game:
    get:
      tags:
        - "game"
      summary: "Get all my games"
      description: ""
      operationId: "getAllGames"
      produces:
        - "application/json"
      responses:
        "200":
          description: "ok"
          schema:
            type: array
            items:
              $ref: "#/definitions/GameDescription"

  /game/create:
    post:
      tags:
      - "game"
      summary: "create a new game"
      description: ""
      operationId: "create a game"
      consumes:
        - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "game"
          description: "the game to create"
          required: true
          schema:
            $ref : "#/definitions/GameDescription"
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/definitions/Game"

  /game/{uuid}:
    get:
      tags:
        - "game"
      summary: "get a games"
      description: ""
      operationId: "getGame"
      parameters:
        - name: "uuid"
          in: "path"
          required: true
          type: "string"
      produces:
        - "application/json"
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/definitions/Game"

  /game/{uuid}/join:
    get:
      tags:
      - "game"
      summary: "join a games"
      description: ""
      operationId: "joinGame"
      parameters:
      - name: "uuid"
        in: "path"
        required: true
        type: "string"
      produces:
      - "application/json"
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/definitions/Game"
  
  /game/{uuid}/start:
    get:
      tags:
      - "game"
      summary: "start the game"
      description: ""
      operationId: "startGame"
      parameters:
      - name: "uuid"
        in: "path"
        required: true
        type: "string"
      produces:
      - "application/json"
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/definitions/Game"
              
  /game/LostInTranslation/{uuid}:
    get:
      tags:
      - "lostInTranslation"
      summary: "Get an LostInTranslation game"
      description: ""
      operationId: "getGame"
      produces:
      - "application/json"
      parameters:
      - name: "uuid"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/definitions/LostInTranslationGame"
  
  /game/LostInTranslation/{uuid}/story/{storyId}/text:
    post:
      tags:
      - "lostInTranslation"
      summary: "add text round in LostInTranslation game"
      description: ""
      operationId: "addTextRound"
      produces:
      - "application/json"
      consumes:
      - "application/json"
      parameters:
      - name: "uuid"
        in: "path"
        required: true
        type: "string"
      - name: "storyId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "text"
        description: "the text"
        required: true
        schema:
          type: string

      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/definitions/LostInTranslationGame"
              
  /game/LostInTranslation/{uuid}/story/{storyId}/drawing:
    post:
      tags:
      - "lostInTranslation"
      summary: "add drawing round in lostInTranslation game"
      description: ""
      operationId: "addDrawingRound"
      produces:
      - "application/json"
      consumes:
        - multipart/form-data
      parameters:
      - name: "uuid"
        in: "path"
        required: true
        type: "string"
      - name: "storyId"
        in: "path"
        required: true
        type: "string"
      - name: file
        type: file
        in: formData
        required: true

      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/definitions/LostInTranslationGame"



  /game/DefineItLy/{uuid}:
    get:
      tags:
        - "defineitly"
      summary: "Get a DefineItLy game"
      description: ""
      operationId: "getGame"
      produces:
        - "application/json"
      parameters:
        - name: "uuid"
          in: "path"
          required: true
          type: "string"
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/definitions/DefineItLyGame"

  /game/DefineItLy/{uuid}/question:
    post:
      tags:
        - "defineitly"
      summary: "Add a definitely question"
      description: ""
      operationId: "addQuestion"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "uuid"
          in: "path"
          required: true
          type: "string"
        - in: "body"
          name: "text"
          description: "the question"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/definitions/DefineItLyGame"

  /game/DefineItLy/{uuid}/question/{questionUuid}:
    post:
      tags:
        - "defineitly"
      summary: "Add a definitely response to a question"
      description: ""
      operationId: "addResponse"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "uuid"
          in: "path"
          required: true
          type: "string"
        - name: "questionUuid"
          in: "path"
          required: true
          type: "string"
        - in: "body"
          name: "text"
          description: "the response"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/definitions/DefineItLyGame"

  /game/DefineItLy/{uuid}/question/{questionUuid}/choice:
    post:
      tags:
        - "defineitly"
      summary: "Chose a response to a question"
      description: ""
      operationId: "choseResponse"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "uuid"
          in: "path"
          required: true
          type: "string"
        - name: "questionUuid"
          in: "path"
          required: true
          type: "string"
        - in: "body"
          name: "responseUuid"
          description: "the response uuid"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "ok"
          schema:
            $ref: "#/definitions/DefineItLyGame"

  /file/{id}:
    get:
      tags:
        - "file"
      summary: "get a file"
      description: "get a file"
      operationId: "getFile"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
      responses:
        "200":
          description: "ok"

  
   
definitions:
  User:
    type: "object"
    properties:
      uuid:
        type: "string"
      name:
        type: "string"
      canAdministrageGame:
        type: "boolean"
      linkedAccounts:
        type: array
        items:
          $ref: "#/definitions/UserAssociation"

  UserAssociation:
    type: "object"
    properties:
      linkType:
        type: string
        enum:
          - Facebook
      accessToken:
        type: string

  GameDescription:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      uuid:
        type: "string"
      startTime:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        enum:
        - "toStart"
        - "inPlay"
        - "finished"
      gameType:
        type: "string"
        enum:
        - "lostInTranslation"
        - "define-it-ly"

  Game:
    type: "object"
    properties:
      description:
        $ref: "#/definitions/GameDescription"
      users:
        type: array
        items:
          $ref: "#/definitions/User"


  LostInTranslationGame:
    type: "object"
    properties:
      game:
        $ref: "#/definitions/Game"
      stories:
        type: array
        items:
          $ref: "#/definitions/LostInTranslationStory"

  LostInTranslationStory:
    type: "object"
    properties:
      originalUser:
        $ref: "#/definitions/User"
      storyId:
        type: string
      rounds:
        type: array
        items:
          $ref: "#/definitions/LostInTranslationRound"


  LostInTranslationRound:
    type: "object"
    properties:
      roundUser:
        $ref: "#/definitions/User"
      storyId:
        type: string
      submissionDate:
        type: "string"
        format: "date-time"
      roundType:
        type: string
        enum:
          - text
          - drawing
      text:
        type: string
      drawing:
        type: string
        description: id of the drawing file, use file api to recover it
    
  DefineItLyGame:
    type: "object"
    properties:
      game:
        $ref: "#/definitions/Game"
      rounds:
        type: array
        items:
          $ref: "#/definitions/DefineItLyRound"
      points:
        type: array
        items:
          $ref: "#/definitions/UserWithPoints"

  DefineItLyRound:
    type: "object"
    properties:
      uuid:
        type: string
      quedtionByUser:
        $ref: "#/definitions/User"
      roundId:
        type: string
      submissionDate:
        type: "string"
        format: "date-time"
      question:
        type: string
      responses:
        $ref: "#/definitions/DefineItLyResponse"
      status:
        type: "string"
        enum:
          - "waitQuestion"
          - "waitResponses"
          - "choseResponses"
          - "finished"

  DefineItLyResponse:
    type: "object"
    properties:
      uuid:
        type: string
      response:
        type: string
      responseByUser:
        $ref: "#/definitions/User"
      chosenBy:
        type: array
        items:
          $ref: "#/definitions/UserWithPoints"

  UserWithPoints:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/User"
      points:
        type: array
        items:
          $ref: "#/definitions/Points"

  Points:
    type: "object"
    properties:
      amount:
        type: number
      category:
        type: string


